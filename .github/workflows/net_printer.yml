# Copyright (C) 2023, Advanced Micro Devices, Inc.  All rights reserved.
#
# Author: Eddie Hung, AMD
#
# SPDX-License-Identifier: MIT
#

name: net_printer
on:
  push:
  pull_request:
jobs:
  print_static_globals:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        benchmark:
          - boom_med_pb
          - vtr_mcml
          - rosetta_fd
          - corundum_25g
          - vtr_lu64peeng
          - corescore_500
          - corescore_500_pb
          - mlcad_d181_lefttwo3rds
          - koios_dla_like_large
          - boom_soc
          - ispd16_example2
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
      - run:
          make setup-net_printer download-benchmarks
      - name: Print GND net
        run:
          python3 net_printer/np.py ${{ matrix.benchmark }}_unrouted.phys GLOBAL_LOGIC0 | tee gnd.physnet
      - name: Print GND stubs
        run: |
          sed -n -e '/Stub: 0/,$p' gnd.physnet
      - name: Print VCC net
        run:
          python3 net_printer/np.py ${{ matrix.benchmark }}_unrouted.phys GLOBAL_LOGIC1 | tee vcc.physnet
      - name: Print VCC stubs
        run: |
          sed -n -e '/Stub: 0/,$p' vcc.physnet
      - name: Print largest global net (corundum_25g)
        if: matrix.benchmark == 'corundum_25g'
        run:
          python3 net_printer/np.py ${{ matrix.benchmark }}_unrouted.phys pcie_user_clk
      - name: Print global nets (corescore_500/corescore_500_pb)
        if: matrix.benchmark == 'corescore_500' || matrix.benchmark == 'corescore_500_pb'
        run:
          python3 net_printer/np.py ${{ matrix.benchmark }}_unrouted.phys clk_BUFGP rst
      - name: Print global nets (mlcad_d181_lefttwo3rds/ispd16_example2)
        if: matrix.benchmark == 'mlcad_d181_lefttwo3rds' || matrix.benchmark == 'ispd16_example2'
        run:
          python3 net_printer/np.py ${{ matrix.benchmark }}_unrouted.phys clk_BUFGP_net_top_wire controlSig0 controlSig1

